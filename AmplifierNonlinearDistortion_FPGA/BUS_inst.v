// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 64-Bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Mon May 16 21:08:31 2022

BUS BUS_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.rst_n(rst_n_sig) ,	// input  rst_n_sig
	.ADDR(ADDR_sig) ,	// input [11:0] ADDR_sig
	.RD(RD_sig) ,	// input  RD_sig
	.WR(WR_sig) ,	// input  WR_sig
	.DATA(DATA_sig) ,	// inout [15:0] DATA_sig
	.cs0(cs0_sig) ,	// output  cs0_sig
	.cs1(cs1_sig) ,	// output  cs1_sig
	.cs2(cs2_sig) ,	// output  cs2_sig
	.cs3(cs3_sig) ,	// output  cs3_sig
	.cs4(cs4_sig) ,	// output  cs4_sig
	.cs5(cs5_sig) ,	// output  cs5_sig
	.cs6(cs6_sig) ,	// output  cs6_sig
	.cs7(cs7_sig) ,	// output  cs7_sig
	.cs8(cs8_sig) ,	// output  cs8_sig
	.cs9(cs9_sig) ,	// output  cs9_sig
	.cs10(cs10_sig) ,	// output  cs10_sig
	.cs11(cs11_sig) ,	// output  cs11_sig
	.cs12(cs12_sig) ,	// output  cs12_sig
	.cs13(cs13_sig) ,	// output  cs13_sig
	.cs14(cs14_sig) ,	// output  cs14_sig
	.cs15(cs15_sig) ,	// output  cs15_sig
	.rddata0(rddata0_sig) ,	// input [15:0] rddata0_sig
	.rddata1(rddata1_sig) ,	// input [15:0] rddata1_sig
	.rddata2(rddata2_sig) ,	// input [15:0] rddata2_sig
	.rddata3(rddata3_sig) ,	// input [15:0] rddata3_sig
	.rddata4(rddata4_sig) ,	// input [15:0] rddata4_sig
	.rddata5(rddata5_sig) ,	// input [15:0] rddata5_sig
	.rddata6(rddata6_sig) ,	// input [15:0] rddata6_sig
	.rddata7(rddata7_sig) ,	// input [15:0] rddata7_sig
	.rddata8(rddata8_sig) ,	// input [15:0] rddata8_sig
	.rddata9(rddata9_sig) ,	// input [15:0] rddata9_sig
	.rddata10(rddata10_sig) ,	// input [15:0] rddata10_sig
	.rddata11(rddata11_sig) ,	// input [15:0] rddata11_sig
	.rddata12(rddata12_sig) ,	// input [15:0] rddata12_sig
	.rddata13(rddata13_sig) ,	// input [15:0] rddata13_sig
	.rddata14(rddata14_sig) ,	// input [15:0] rddata14_sig
	.rddata15(rddata15_sig) ,	// input [15:0] rddata15_sig
	.wrdata0(wrdata0_sig) ,	// output [15:0] wrdata0_sig
	.wrdata1(wrdata1_sig) ,	// output [15:0] wrdata1_sig
	.wrdata2(wrdata2_sig) ,	// output [15:0] wrdata2_sig
	.wrdata3(wrdata3_sig) ,	// output [15:0] wrdata3_sig
	.wrdata4(wrdata4_sig) ,	// output [15:0] wrdata4_sig
	.wrdata5(wrdata5_sig) ,	// output [15:0] wrdata5_sig
	.wrdata6(wrdata6_sig) ,	// output [15:0] wrdata6_sig
	.wrdata7(wrdata7_sig) ,	// output [15:0] wrdata7_sig
	.wrdata8(wrdata8_sig) ,	// output [15:0] wrdata8_sig
	.wrdata9(wrdata9_sig) ,	// output [15:0] wrdata9_sig
	.wrdata10(wrdata10_sig) ,	// output [15:0] wrdata10_sig
	.wrdata11(wrdata11_sig) ,	// output [15:0] wrdata11_sig
	.wrdata12(wrdata12_sig) ,	// output [15:0] wrdata12_sig
	.wrdata13(wrdata13_sig) ,	// output [15:0] wrdata13_sig
	.wrdata14(wrdata14_sig) ,	// output [15:0] wrdata14_sig
	.wrdata15(wrdata15_sig) 	// output [15:0] wrdata15_sig
);

